# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  workflow_dispatch:
  push:
    branches: '**'
    paths: 'apis/userprofile/**'
  pull_request:
    branches: '**'
    paths: 'apis/userprofile/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 8.x
      uses: actions/setup-node@v1
      with:
        node-version: '8.x'
    - run: npm ci
      working-directory: apis/userprofile
    - run: npm run build --if-present
      working-directory: apis/userprofile
    - run: npm test
      working-directory: apis/userprofile
    - run: echo "AZURE_DEVOPS_EXT_PAT=${{secrets.ADO_PAT}}" >> $GITHUB_ENV 
      if: failure()
    - run: az devops configure --defaults project=devops-openhack-code-base organization=https://dev.azure.com/restonmtc
      if: failure()
    - run: az boards work-item create --title "Pulling ${{ github.ref }} into main" --type Bug
      if: failure()

  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
    - run: ls
    - run: pwd
    - name: build docker container 
      run: docker build --tag dohc3/1.0 $GITHUB_WORKSPACE/apis/userprofile/Dockerfile 
    - run: echo "AZURE_DEVOPS_EXT_PAT=${{secrets.ADO_PAT}}" >> $GITHUB_ENV 
      if: failure()
    - run: az devops configure --defaults project=devops-openhack-code-base organization=https://dev.azure.com/restonmtc
      if: failure()
    - run: az boards work-item create --title "Container creation; Pulling ${{ github.ref }} into main" --type Bug
      if: failure()
      
  pull-request:
    needs: [build, package]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: pull-request
      uses: repo-sync/pull-request@v2
      with:
        source_branch: ""                                 
        destination_branch: 'main'                      
        pr_title: "Pulling ${{ github.ref }} into master"    
        pr_allow_empty: false                             
        github_token: ${{ secrets.GITHUB_TOKEN }}
      
